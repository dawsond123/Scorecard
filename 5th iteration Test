  # tidyx<-x
  x<-tidyx
  x$tjc<-NULL
  x$xkc<-NULL
  
  #### Tidy working set -  Gini loop below ####
  
  # rm(dts)
  # dts = split_df(x, y="testV",ratio=0.6)
  
  # x$AYB[x$AYB==0]<-0.00000000001
  x$CYB<-x$BYB/x$AYB    ### manually calculate
  
  
  x<-data.frame(x$testV,x$testV6,x$GRB, x$W,x$GF, x$YZB, x$DAB,x$TMB,x$QF,x$IG, x$SVB, x$TVB, x$TEB, x$QEB, x$CYB, x$QL, x$YUB)
  names(x)[names(x)=="x.testV"] <- "testV"
  names(x)[names(x)=="x.testV6"] <- "testV6"
  names(x)[names(x)=="x.QF"] <- "QF"
  names(x)[names(x)=="x.W"] <- "W"
  names(x)[names(x)=="x.IG"] <- "IG"
  names(x)[names(x)=="x.HG"] <- "HG"
  names(x)[names(x)=="x.TVB"] <- "TVB"
  names(x)[names(x)=="x.SVB"] <- "SVB"
  names(x)[names(x)=="x.CYB"] <- "CYB"
  names(x)[names(x)=="x.YUB"] <- "YUB"
  names(x)[names(x)=="x.TMB"] <- "TMB"
  names(x)[names(x)=="x.DAB"] <- "DAB"
  names(x)[names(x)=="x.TEB"] <- "TEB"
  names(x)[names(x)=="x.QEB"] <- "QEB"
  names(x)[names(x)=="x.QL"] <- "QL"
  names(x)[names(x)=="x.YZB"] <- "YZB"
  names(x)[names(x)=="x.GF"] <- "GF"
  names(x)[names(x)=="x.GRB"] <- "GRB"
  
  cor(x,use="pairwise.complete.obs")
  
  ConvToNum <- function(x) {
    x<-as.character(x)
    x[x=="NA"]<-0.75
    x[is.na(x)]<-0.75
    x[x=="ND"]<-0.75
    x[x=="?"]<-0.75
    x[x=="D"]<-7
    x[x=="U"]<-0.25
    x<-as.numeric(x)
  }
  
  ## Recategorising variables ##
  
  x$IG[is.na(x$IG)]<- -1
  x$TMB[is.na(x$TMB)]<- 0
  x$YZB[is.na(x$YZB)]<- -48
  x$GF[is.na(x$GF)] <- 100
  
  # x$GRB<-ConvToNum(x$GRB)
  
  # x$GRB<-as.character(x$GRB)
  # x$GRB[x$GRB=="?"]<-NA
  # x$GRB<-addNA(x$GRB)
  
  # x<-within(x, IG[HG==0] <-NA)
  # x$IG<-x$IG / x$HG
  
  x2<-x
  x6<-x
  x2$testV6<-NULL
  x6$testV<-NULL
  
  x2$SVB[is.na(x2$SVB)]<- -150
  x6$SVB[is.na(x6$SVB)]<- -500

  dts2 <- split_df(x2, y="testV",ratio=0.6)
  dts6 <- split_df(x6, y="testV6",ratio=0.6)
  
  x2<-data.frame(dts2$train)
  y2<-data.frame(dts2$test)
  x6<-data.frame(dts6$train)
  y6<-data.frame(dts6$test)
  
  
  QFx<-x2$QF
  QFy<-y2$QF
  QFx6<-x6$QF
  QFy6<-y6$QF
  IGx<-x2$IG
  IGy<-y2$IG
  IGx6<-x6$IG
  IGy6<-y6$IG
  SVBx<-x2$SVB
  SVBy<-y2$SVB
  SVBx6<-x6$SVB
  SVBy6<-y6$SVB
  TEBx<-x2$QEB
  TEBy<-y2$QEB
  TEBx6<-x6$QEB
  TEBy6<-y6$QEB
  CYBx<-x2$CYB
  CYBy<-y2$CYB
  CYBx6<-x6$CYB
  CYBy6<-y6$CYB
  QLx<-x2$QL
  QLy<-y2$QL
  QLx6<-x6$QL
  QLy6<-y6$QL
  GFx<-x2$GF
  GFy<-y2$GF
  GFx6<-x6$GF
  GFy6<-y6$GF
  DABx<-x2$DAB
  DABy<-y2$DAB
  DABx6<-x6$DAB
  DABy6<-y6$DAB
  YZBx<-x2$YZB
  YZBy<-y2$YZB
  YZBx6<-x6$YZB
  YZBy6<-y6$YZB
  Wx<-x2$W
  Wy<-y2$W
  Wx6<-x6$W
  Wy6<-y6$W
  GRBx<-x2$GRB
  GRBy<-y2$GRB
  GRBx6<-x6$GRB
  GRBy6<-y6$GRB
  
  bins2<-woebin(x2,y="testV")
  bins6<-woebin(x6,y="testV6")
  
  
# breaks_adj2<-woebin_adj(bins2,x2, y="testV","W" )
# breaks_adj6<-woebin_adj(bins6,x6, y="testV6","W" )
# breaks_adj2 = list(
# W=c("N1%,%P1%,%S1","N2%,%P2%,%S2","N3%,%P3%,%S3%,%N4%,%P4%,%S4","ZZ"), 
# GF=c(1, 2, 3), 
# YZB=c(0, 10, 60), 
# DAB=c("1", "4"), 
# TMB=c(2, 7, 19), 
# QF=c("540", "560", "615", "650"), 
# IG=c(1, 2, 3, 4), 
# SVB=c(60, 160, 240, 300), 
# TVB=c("60", "140", "360"), 
# TEB=c("2", "3"), 
# QEB=c("1", "2", "3"), 
# CYB=c(0.02, 0.24), 
# QL=c("1", "2", "4", "6"), 
# YUB=c("20", "70", "130")
# )
breaks_adj6 =list(
  GRB=c("0", "1%,%2%,%3%,%4%,%5","6%,%D", "U")
)
# bins2<-woebin(x2,y="testV",breaks_list = breaks_adj2)
bins6<-woebin(x6,y="testV6",breaks_list = breaks_adj6)


x2<-woebin_ply(x2, bins2)  ##train_woe
y2<-woebin_ply(y2, bins2)  ##test_woe
x6<-woebin_ply(x6, bins6, print_step=0)
y6<-woebin_ply(y6, bins6, print_step=0)

x2$QF<-QFx
y2$QF<-QFy
x6$QF<-QFx6
y6$QF<-QFy6
x2$W<-Wx
y2$W<-Wy
x6$W<-Wx6
y6$W<-Wy6
x2$IG<-IGx
y2$IG<-IGy
x6$IG<-IGx6
y6$IG<-IGy6
x2$SVB<-SVBx
y2$SVB<-SVBy
x6$SVB<-SVBx6
y6$SVB<-SVBy6
x2$TEB<-TEBx
y2$TEB<-TEBy
x6$TEB<-TEBx6
y6$TEB<-TEBy6
x2$CYB<-CYBx
y2$CYB<-CYBy
x6$CYB<-CYBx6
y6$CYB<-CYBy6
x2$QL<-QLx
y2$QL<-QLy
x6$QL<-QLx6
y6$QL<-QLy6
x2$GF<-GFx
y2$GF<-GFy
x6$GF<-GFx6
y6$GF<-GFy6
x2$DAB<-DABx
y2$DAB<-DABy
x6$DAB<-DABx6
y6$DAB<-DABy6
x2$YZB<-YZBx
y2$YZB<-YZBy
x6$YZB<-YZBx6
y6$YZB<-YZBy6
x2$GRB<-GRBx
y2$GRB<-GRBy
x6$GRB<-GRBx6
y6$GRB<-GRBy6

# bins2[[c("XUB","bin")]]
# bins6[[c("W","bin")]]

# y2 <- y2[y2$DBC %in% x2$DBC,]   ### Here we remove instances of new factors appearing in test set

Formula <- formula(testV ~ QF + IG_woe + TVB_woe + TEB_woe + CYB_woe + CYB_woe:TEB_woe + SVB + TMB_woe + YZB + W_woe )
Formula2 <- formula(testV6 ~ QF + IG_woe + SVB + QEB_woe  + QL + QL:QF + YUB_woe + DAB_woe + GF_woe + GRB_woe + GRB_woe:SVB )

fit <- glm(Formula , family=binomial(link="logit"), data=x2, na.action=na.omit)
fit6 <- glm(Formula2 , family=binomial(link="logit"), data=x6, na.action=na.omit)

fity <- glm(Formula , family=binomial(link="logit"), data=y2, na.action=na.omit)
fit6y<- glm(Formula2 , family=binomial(link="logit"), data=y6, na.action=na.omit)


predicted<-predict(fit, y2, type="response")
predictedB<-predict(fit, x2, type="response")

predicted6<-predict(fit6, y6, type="response")
predicted6B<-predict(fit6, x6, type="response")


summary(fit6)
anova(fit,test="Chisq")

z<-data.frame(fit$coefficients,fity$coefficients, fit$coefficients/fity$coefficients-1 )
z6<-data.frame(fit6$coefficients,fit6y$coefficients ,fit6$coefficients/fit6y$coefficients-1 )
z
z6

# perf_eva(y6$testV6,predicted6, title = "train")

cat("Gini 2+: ", 2*AUROC(y2$testV,predicted)-1,"\t\tGini 2+ B: ", 2*AUROC(x2$testV,predictedB)-1, "\n")
cat("Gini 6+: ", 2*AUROC(y6$testV6,predicted6)-1,"\t\tGini 6+ B: ", 2*AUROC(x6$testV6,predicted6B)-1, "\n")







