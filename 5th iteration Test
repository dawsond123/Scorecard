# tidyx<-x
x<-tidyx
x$tjc<-NULL
x$xkc<-NULL

#### Tidy working set -  Gini loop below ####

# rm(dts)
# dts = split_df(x, y="testV",ratio=0.6)

x<-data.frame(x$testV,x$testV6,x$QF,x$IG,x$EI,x$HG ,x$TEB,x$SVB,x$YUB  )
names(x)[names(x)=="x.testV"] <- "testV"
names(x)[names(x)=="x.testV6"] <- "testV6"
names(x)[names(x)=="x.QF"] <- "QF"
names(x)[names(x)=="x.EI"] <- "EI"
names(x)[names(x)=="x.IG"] <- "IG"
names(x)[names(x)=="x.HG"] <- "HG"
names(x)[names(x)=="x.SVB"] <- "SVB"
# names(x)[names(x)=="x.QL"] <- "QL"
names(x)[names(x)=="x.YUB"] <- "YUB"
# names(x)[names(x)=="x.MHC"] <- "MHC"
# names(x)[names(x)=="x.EQ"] <- "EQ"
# names(x)[names(x)=="x.XUB"] <- "XUB"
# names(x)[names(x)=="x.AN"] <- "AN"
names(x)[names(x)=="x.TEB"] <- "TEB"




ConvToNum <- function(x) {
   x<-as.character(x)
   x[x=="NA"]<-0.75
   x[is.na(x)]<-0.75
   x[x=="ND"]<-0.75
   x[x=="D"]<-7
   x[x=="U"]<-0.25
   x<-as.numeric(x)
}

## Recategorising variables ##

x$EI[is.na(x$EI)]<- -1
x$SVB[is.na(x$SVB)]<- -1
# x$EQ<-ConvToNum(x$EQ)

# x<-within(x, EI[HG==0] <-NA)

x2<-x
x6<-x
x2$testV6<-NULL
x6$testV<-NULL

# dts2 <- split_df(x2, y="testV",ratio=0.6)
# dts6 <- split_df(x6, y="testV6",ratio=0.6)

x2<-data.frame(dts2$train)
y2<-data.frame(dts2$test)
x6<-data.frame(dts6$train)
y6<-data.frame(dts6$test)


QFx<-x2$QF
QFy<-y2$QF
QFx6<-x6$QF
QFy6<-y6$QF
EIx<-x2$EI
EIy<-y2$EI
EIx6<-x6$EI
EIy6<-y6$EI
TEBx<-x2$TEB
TEBy<-y2$TEB
# EQx<-x2$EQ
# EQy<-y2$EQ
SVBx<-x2$SVB
SVBy<-y2$SVB
SVBx6<-x6$SVB
SVBy6<-y6$SVB

bins2<-woebin(x2,y="testV")
bins6<-woebin(x6,y="testV6")


# breaks_adj2<-woebin_adj(bins2,x2, y="testV","EI" )
 # breaks_adj2 = list(
 #   QF=c("540", "560", "610", "655"),
 #   IG=c("1", "2", "4"),
 #   WVB=c(30, 120, 210),
 #   SEB=c("1", "2", "3"),
 #   QIC=c("1", "2"),
 #   QL=c("1", "2", "3"),
 #   YUB=c("20", "80", "140", "250"),
 #   MHC=c(1, 2, 3),
 #   EQ=c(0.5, 1, 2),
 #   XUB=c("20","60", "100", "140"),
 #   AN=c("105", "215")
 # )
# breaks_adj6 = "list( SEB=c(1, 2, 3,4,5))"
 # bins2<-woebin(x2,y="testV",breaks_list = breaks_adj2)
# bins6<-woebin(x6,y="testV6",breaks_list = breaks_adj6)


x2<-woebin_ply(x2, bins2)  ##train_woe
y2<-woebin_ply(y2, bins2)  ##test_woe
x6<-woebin_ply(x6, bins6, print_step=0)
y6<-woebin_ply(y6, bins6, print_step=0)

x2$QF<-QFx
y2$QF<-QFy
x6$QF<-QFx6
y6$QF<-QFy6
x2$EI<-EIx
y2$EI<-EIy
x6$EI<-EIx6
y6$EI<-EIy6
x2$SVB<-SVBx
y2$SVB<-SVBy
x6$SVB<-SVBx6
y6$SVB<-SVBy6
x6$TEB<-TEBx
y6$TEB<-TEBy
# x2$EQ<-EQx
# y2$EQ<-EQy

# bins2[[c("XUB","bin")]]
# bins6[[c("EI","bin")]]

# y2 <- y2[y2$DBC %in% x2$DBC,]   ### Here we remove instances of new factors appearing in test set

Formula <- formula(testV ~ QF  + IG_woe  )
Formula2 <- formula(testV6 ~ QF + EI  )

fit <- glm(Formula , family=binomial(link="logit"), data=x2, na.action=na.omit)
fit6 <- glm(Formula2 , family=binomial(link="logit"), data=x6, na.action=na.omit)

fity <- glm(Formula , family=binomial(link="logit"), data=y2, na.action=na.omit)
fit6y<- glm(Formula2 , family=binomial(link="logit"), data=y6, na.action=na.omit)


predicted<-predict(fit, y2, type="response")
predictedB<-predict(fit, x2, type="response")

predicted6<-predict(fit6, y6, type="response")
predicted6B<-predict(fit6, x6, type="response")

  
summary(fit)
anova(fit,test="Chisq")

z<-data.frame(fit$coefficients,fity$coefficients,fit$coefficients/fity$coefficients)
z6<-data.frame(fit6$coefficients,fit6y$coefficients ,fit6$coefficients/fit6y$coefficients )
z
z6

# perf_eva(y6$testV6,predicted6, title = "train")

cat("Gini 2+: ", 2*AUROC(y2$testV,predicted)-1,"\t\tGini 2+ B: ", 2*AUROC(x2$testV,predictedB)-1, "\n")
cat("Gini 6+: ", 2*AUROC(y6$testV6,predicted6)-1,"\t\tGini 6+ B: ", 2*AUROC(x6$testV6,predicted6B)-1, "\n")





